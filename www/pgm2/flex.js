// global flex objectvar flex;var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);// check if viewport metatag is set, otherwise create itvar metaViewport = document.querySelector("meta[name=viewport]");if (metaViewport == null) {	metaViewport=document.createElement('meta');	metaViewport.name = "viewport";	document.getElementsByTagName('head')[0].appendChild(metaViewport);}// check if viewport metatag has correct contentif (metaViewport.getAttribute("content") !== "width=device-width, initial-scale=1.0")	metaViewport.content = "width=device-width, initial-scale=1.0";if (isSafari) // avoid auto zoom in Safari	metaViewport.content = "width=device-width, initial-scale=1.0, maximum-scale=1";if(window.jQuery) {  $(document).ready(initFlex);} else {  // FLOORPLAN compatibility  loadScript("pgm2/jquery.min.js", function() {    loadScript("pgm2/jquery-ui.min.js", function() {      initFlex();    }, true);  }, true);}function initFlex () {	if (flex) return;	flex = {};		flex.createCSS = function() {		var css = '';		// required to style selects in Safari		if (isSafari)			css = css + 'select {-moz-appearance: none; -webkit-appearance: none; appearance: none; }';				//header		css = css + '#hdr, #hdr input { background: '+this.styleData.color.HeaderBG+'; }';		css = css + '#hdr svg { fill: '+this.styleData.color.HeaderIcon+'; }';		css = css + '#hdr { border-bottom: 1px solid '+this.styleData.color.HeaderBorder+'; }';		css = css + '#hdr #cmdInput input, #hdr #cmdInput input::placeholder { color: '+this.styleData.color.HeaderText+'; }';		//menu		css = css + '#menuScrollArea, #menuIcons { background-color: '+this.styleData.color.MenuBG+';}';		css = css + '#menuIcons { border-bottom: 1px solid '+this.styleData.color.MenuBorder+';}';		css = css + '#menuScrollArea {border-right: 1px solid '+this.styleData.color.MenuBorder+';}';		css = css + '.roomBlock3, .roomBlock4, .roomBlock5 { border-top: 1px solid '+this.styleData.color.MenuBorder+';}';		css = css + '#menu, #menu a { color: '+this.styleData.color.MenuText+'; }';		css = css + ".menuTree.closed > td > div > div { background-image: url('data:image/svg+xml;utf8,<svg viewBox=\"0 0 1792 1792\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\""+encodeURIComponent(this.styleData.color.MenuText)+"\" d=\"M1171 960q0 13-10 23l-466 466q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l393-393-393-393q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l466 466q10 10 10 23z\"/></svg>'); } .menuTree.open > td > div > div {	background-image: url('data:image/svg+xml;utf8,<svg viewBox=\"0 0 1792 1792\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\""+encodeURIComponent(this.styleData.color.MenuText)+"\" d=\"M1171 960q0 13-10 23l-466 466q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l393-393-393-393q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l466 466q10 10 10 23z\" transform=\"rotate(90,896,896)\"/></svg>');}";		css = css + '#menu svg { fill: '+this.styleData.color.MenuRoomIcon+'; }';		css = css + '#menuIcons svg, #menuIcons svg path, #menuIcons .closebtn { fill: '+this.styleData.color.MenuIcon+'; color: '+this.styleData.color.MenuIcon+'; }';		css = css + '#menu a:hover, #menu .sel a, #menu a:hover svg, #menu a:hover svg path, #menu .sel svg, #menu .sel svg path{ color: '+this.styleData.color.MenuHoverLink+'; fill: '+this.styleData.color.MenuHoverLink+'; }'		//main content		css = css + 'body, input.iconTable {background-color: '+this.styleData.color.MainBG+';}';		css = css + '#content .devType, .makeTable > span:first-child, div.fileList, .ui-dialog-titlebar { background: '+this.styleData.color.TableHeaderBG+'; }'		css = css + '#content .devType, .makeTable > span:first-child, div.fileList, #content .devType a, #content .devType a:hover { color: '+this.styleData.color.TableHeaderText+'; }';		css = css + '.roomoverview table.block, .makeTable > table, table.fileList, .block table.readingsGroup, .SVGlabel[data-name=svgZoomControl], #fwmenu, .ui-dialog { border: 1px solid '+this.styleData.color.TableBorder+'; }';		$('table.readingsGroup').parent().css('border','1px solid '+this.styleData.color.TableBorder);		css = css + '.devType, .makeTable > span:first-child, div.fileList, .makeSelect[cmd=set], .makeSelect[cmd=get], .makeSelect[cmd=attr], #devSpecHelp, div.detLink, #rawDef { border: 1px solid '+this.styleData.color.TableBorder+'; }';		css = css + '.odd, .odd select, .odd input, .internals > tbody > tr:not(.odd):not(.even), textarea, #devSpecHelp, .SVGlabel[data-name=svgZoomControl], #fwmenu, .ui-widget input, .ui-widget select, .ui-widget, .ui-widget-content, div.detLink, #rawDef, .odd textarea { background: '+this.styleData.color.TableOdd+'; }';		css = css + '.even, .even select, .even input, .event textarea { background: '+this.styleData.color.TableEven+'; }';		css = css + '#content, #content a, .SVGlabel:not([data-name=svgZoomControl]) a:after, #fwmenu, .ui-widget-content a, body.commandref #right a, #devSpecHelp a, .ui-widget select, .ui-widget input, textarea, .odd select, .even select, .odd input, .even input, .makeSelect select, .makeSelect input, .ui-widget-content, #content .block .devType, #content .block .makeTable > span:first-child, #content .block div.fileList, #content .block .devType a, #content .block .devType a:hover { color: '+this.styleData.color.TableText+'; fill: '+this.styleData.color.TableText+'; }';		css = css + '#content a:hover, .SVGlabel:not([data-name=svgZoomControl]) a:hover::after, .ui-widget-content a:hover, body.commandref #right a:hover, #devSpecHelp a:hover, .ui-state-hover, .ui-widget-content .ui-state-hover, .ui-widget-header .ui-state-hover, .ui-state-focus, .ui-widget-content .ui-state-focus, .ui-widget-header .ui-state-focus { color: '+this.styleData.color.TableHoverLink+'; }';		css = css + '.changed { color: '+this.styleData.color.TableNewEvent+'; }';		css = css + '#content .icon svg, #content .block svg, .SVGlabel[data-name=svgZoomControl] svg { fill: '+this.styleData.color.TableIcon+'; }';		css = css + '.odd:hover, .even:hover { background: '+this.styleData.color.TableHoverRow+'; }';		// GET/SET/ATTR		css = css + '.makeSelect select, .makeSelect select option, .makeSelect input, .makeSelect[cmd=set], .makeSelect[cmd=get], .makeSelect[cmd=attr] { background-color: '+this.styleData.color.SetGetAttrBG+'; }';		// Submit-Button		css = css + 'input[type=submit],#addRegexpPart,#eventReset, button.ui-button { color: '+this.styleData.color.SubmitButtonText+'!important; background:'+this.styleData.color.SubmitButtonBG+'!important; border: 1px solid '+this.styleData.color.SubmitButtonBorder+'!important;}';		// Widgets		css = css + '.handle, input, select,  { color: '+this.styleData.color.WidgetText+'; }';		css = css + '.handle, .slider, input, select, textarea { border: 1px solid '+this.styleData.color.WidgetBorder+'; }';		css = css + '.colorpicker_widget[informid]:not([title]):not([tabindex]):not(.colorpicker) { border: 1px solid '+this.styleData.color.WidgetBorder+'!important; }';		// checkbox		css = css + 'input[type="checkbox"] {background-color: '+this.styleData.color.TableOdd+';}';		css = css + 'input[type="checkbox"]:checked {box-shadow: inset 0px 0px 0px 2px '+this.styleData.color.TableOdd+'; background-color: '+this.styleData.color.WidgetHighlight+';}';				/**** SVGplot ****/		css = css + '.SVGplot > svg { min-width: '+this.styleData.plotMinWidth+'; max-width: '+this.styleData.plotMaxWidth+'; }';		//background and border		css = css + '.background, .SVGplot .border { fill:'+this.styleData.color.plotBG+'!important; }';		css = css + '.SVGplot .border  { stroke: '+this.styleData.color.plotBorder+'; }';		//text (title and axes)		css = css + 'div.SVGplot text.title, div.SVGplot text.ylabel, div.SVGplot text.y2label { fill:'+this.styleData.color.plotText+'!important; }';		//marker		css = css + 'circle#svgmarker { fill:'+this.styleData.color.plotMarker+'!important; }';		css = css + 'div#svgmarker { color:'+this.styleData.color.plotMarker+'!important; }';		//grid		css = css + '.SVGplot .vgrid, .SVGplot .hgrid   { stroke:'+this.styleData.color.plotGrid+'!important; }';		//lines		css = css + '.SVGplot .pasted  { stroke:'+this.styleData.color.plotLinePasted+'!important; }';		css = css + '.SVGplot.l0,.SVGplot.l0fill,.SVGplot.l0dot,.SVGplot.l0fill_stripe,.SVGplot.l0fill_gyr,#gr0_stripe > path { stroke:'+this.styleData.color.plotLine0+'!important; }';		css = css + '.SVGplot.l1,.SVGplot.l1fill,.SVGplot.l1dot,.SVGplot.l1fill_stripe,#gr1_stripe > path { stroke:'+this.styleData.color.plotLine1+'!important; }';		css = css + '.SVGplot.l2,.SVGplot.l2fill { stroke:'+this.styleData.color.plotLine2+'!important; }';		css = css + '.SVGplot.l3,.SVGplot.l3fill { stroke:'+this.styleData.color.plotLine3+'!important; }';		css = css + '.SVGplot.l4,.SVGplot.l4fill { stroke:'+this.styleData.color.plotLine4+'!important; }';		css = css + '.SVGplot.l5,.SVGplot.l5fill { stroke:'+this.styleData.color.plotLine5+'!important; }';		css = css + '.SVGplot.l6,.SVGplot.l6fill { stroke:'+this.styleData.color.plotLine6+'!important; }';		css = css + '.SVGplot.l7,.SVGplot.l7fill { stroke:'+this.styleData.color.plotLine7+'!important; }';		css = css + '.SVGplot.l8,.SVGplot.l8fill { stroke:'+this.styleData.color.plotLine8+'!important; }';		//gradients		css = css + '#gr_0 > stop:nth-child(1) { stop-color: '+this.shiftColor(this.styleData.color.plotLine0,'#888')+'!important; }';		css = css + '#gr_0 > stop:nth-child(2) { stop-color: '+this.styleData.color.plotLine0+'!important; }';		css = css + '#gr_1 > stop:nth-child(1) { stop-color: '+this.shiftColor(this.styleData.color.plotLine1,'#888')+'!important; }';		css = css + '#gr_1 > stop:nth-child(2) { stop-color: '+this.styleData.color.plotLine1+'!important; }';		css = css + '#gr_2 > stop:nth-child(1) { stop-color: '+this.shiftColor(this.styleData.color.plotLine2,'#888')+'!important; }';		css = css + '#gr_2 > stop:nth-child(2) { stop-color: '+this.styleData.color.plotLine2+'!important; }';		css = css + '#gr_3 > stop:nth-child(1) { stop-color: '+this.shiftColor(this.styleData.color.plotLine3,'#888')+'!important; }';		css = css + '#gr_3 > stop:nth-child(2) { stop-color: '+this.styleData.color.plotLine3+'!important; }';		css = css + '#gr_4 > stop:nth-child(1) { stop-color: '+this.shiftColor(this.styleData.color.plotLine4,'#888')+'!important; }';		css = css + '#gr_4 > stop:nth-child(2) { stop-color: '+this.styleData.color.plotLine4+'!important; }';		css = css + '#gr_5 > stop:nth-child(1) { stop-color: '+this.shiftColor(this.styleData.color.plotLine5,'#888')+'!important; }';		css = css + '#gr_5 > stop:nth-child(2) { stop-color: '+this.styleData.color.plotLine5+'!important; }';		css = css + '#gr_6 > stop:nth-child(1) { stop-color: '+this.shiftColor(this.styleData.color.plotLine6,'#888')+'!important; }';		css = css + '#gr_6 > stop:nth-child(2) { stop-color: '+this.styleData.color.plotLine6+'!important; }';		css = css + '#gr0_gyr > stop:nth-child(1) { stop-color: '+this.styleData.color.plotLine0+'!important; }';		css = css + '#gr0_gyr > stop:nth-child(2) { stop-color: '+this.shiftColor(this.styleData.color.plotLine0,'#050')+'!important; }';		css = css + '#gr0_gyr > stop:nth-child(3) { stop-color: '+this.shiftColor(this.styleData.color.plotLine0,'#055')+'!important; }';		// text		css = css + 'text.SVGplot.l0,text.SVGplot.l0fill,text.SVGplot.l0fill_stripe,text.SVGplot.l0dot,text.SVGplot.l0fill_gyr { fill:'+this.styleData.color.plotLine0+'!important; }';		css = css + 'text.SVGplot.l1,text.SVGplot.l1fill,text.SVGplot.l1fill_stripe,text.SVGplot.l1dot { fill:'+this.styleData.color.plotLine1+'!important; }';		css = css + 'text.SVGplot.l2,text.SVGplot.l2fill { fill:'+this.styleData.color.plotLine2+'!important; }';		css = css + 'text.SVGplot.l3,text.SVGplot.l3fill { fill:'+this.styleData.color.plotLine3+'!important; }';		css = css + 'text.SVGplot.l4,text.SVGplot.l4fill { fill:'+this.styleData.color.plotLine4+'!important; }';		css = css + 'text.SVGplot.l5,text.SVGplot.l5fill { fill:'+this.styleData.color.plotLine5+'!important; }';		css = css + 'text.SVGplot.l6,text.SVGplot.l6fill { fill:'+this.styleData.color.plotLine6+'!important; }';		css = css + 'text.SVGplot.l7 { fill:'+this.styleData.color.plotLine7+'!important; }';		css = css + 'text.SVGplot.l8 { fill:'+this.styleData.color.plotLine8+'!important; }';		//		if (this.styleData.hideWebcmdOnSmallScreen) {			css = css + '@media all and (max-width: 500px) {.roomoverview .odd > td:nth-child(n+3), .roomoverview .even > td:nth-child(n+3) {display:none!important;}}';			css = css + '@media all and (max-width: 800px) {.roomoverview .odd > td.wrapped:nth-child(n+3), .roomoverview .even > td.wrapped:nth-child(n+3) {display:none!important;}}';		}				this.css = css;	}		flex.checkStyleData = function () {		/**** General ******/		if (!this.styleData.hasOwnProperty('title'))                   this.styleData.title = 'fhem';		/**** Icons ******/		if (!this.styleData.hasOwnProperty('myUtilsFileName'))         this.styleData.myUtilsFileName = 'myUtils.pm';		if (!this.styleData.hasOwnProperty('plotMinWidth'))            this.styleData.plotMinWidth = '250px';		if (!this.styleData.hasOwnProperty('plotMaxWidth'))            this.styleData.plotMaxWidth = '100%';		if (!this.styleData.hasOwnProperty('scalePage'))               this.styleData.scalePage = '1';		if (!this.styleData.hasOwnProperty('showClock'))               this.styleData.showClock = true;		if (!this.styleData.hasOwnProperty('showRebootButton'))        this.styleData.showRebootButton = true;		if (!this.styleData.hasOwnProperty('showUpdateButton'))        this.styleData.showUpdateButton = true;		if (!this.styleData.hasOwnProperty('showUpdateCheckButton'))   this.styleData.showUpdateCheckButton = true;		if (!this.styleData.hasOwnProperty('showRereadIconsButton'))   this.styleData.showRereadIconsButton = true;		if (!this.styleData.hasOwnProperty('showRawInputButton'))      this.styleData.showRawInputButton = true;		if (!this.styleData.hasOwnProperty('showSaveButton'))          this.styleData.showSaveButton = true;		if (!this.styleData.hasOwnProperty('showRoomDeviceName'))      this.styleData.showRoomDeviceName = true;		if (!this.styleData.hasOwnProperty('showMenuAlways'))          this.styleData.showMenuAlways = true;		if (!this.styleData.hasOwnProperty('enableCommandHistory'))    this.styleData.enableCommandHistory = true;		if (!this.styleData.hasOwnProperty('enableDeviceSearch'))      this.styleData.enableDeviceSearch = true;		if (!this.styleData.hasOwnProperty('showReadingsGroupAsTable'))this.styleData.showReadingsGroupAsTable = true;		if (!this.styleData.hasOwnProperty('hideWebcmdOnSmallScreen')) this.styleData.hideWebcmdOnSmallScreen = false;		if (!this.styleData.hasOwnProperty('colorOptionsDetailed'))    this.styleData.colorOptionsDetailed = false;		/**** Styles ****/		if (!this.styleDataComplete.flex.hasOwnProperty('colorPreset'))this.styleDataComplete.flex.colorPreset = {};		this.styleData.color = $.extend({},this.defaultStyles.bright,this.styleData.color);				this.simpleStyleData = {			Background: this.styleData.color.MainBG,			Text: this.styleData.color.TableText,			HeaderText: this.styleData.color.HeaderText,			MenuBackground: this.styleData.color.MenuBG,			MenuText: this.styleData.color.MenuText,			Accent: this.styleData.color.WidgetHighlight		};	}		flex.applyStylePreset = function(name) {		if (this.defaultStyles.hasOwnProperty(name))			this.styleData.color = $.extend({},this.defaultStyles[name]);		else if (this.styleDataComplete.flex.colorPreset.hasOwnProperty(name))			this.styleData.color = $.extend({},this.styleDataComplete.flex.colorPreset[name]);		this.checkStyleData();		this.writeStyleData(true);		this.applyStyleData();		this.createSettingsHTML();	}		flex.deleteStylePreset = function () {		var name = prompt("Enter style name to delete", "mystyle");		if (name) name = name.trim();		if (!name) return;		delete this.styleDataComplete.flex.colorPreset[name];		this.cmd("attr "+this.webName+" styleData "+JSON.stringify(this.styleDataComplete, undefined, 1));		$('option[value='+name+']').remove();	}		flex.saveStylePreset = function(msg) {		var name = prompt(msg, "mystyle");		if (name) name = name.trim();		if (!name) return;		var overwrite;		if (this.styleDataComplete.flex.colorPreset.hasOwnProperty(name)){			overwrite = confirm('Existing Style with name '+name+'. Overwrite?')			if (!overwrite) return;		}		if (this.defaultStyles.hasOwnProperty(name)){			this.saveStylePreset("Not allowed to overwrite default styles. Enter different style name");			return;		}				this.styleDataComplete.flex.colorPreset[name] = $.extend({},this.styleData.color);		this.cmd("attr "+this.webName+" styleData "+JSON.stringify(this.styleDataComplete, undefined, 1));		if (!overwrite)			$('<option>', {value: name}).text(name).appendTo($('#flexStylePresets'));	}		flex.loadDefaultStyles = function() {		this.defaultStyles = {};		this.defaultStyles.bright = {			HeaderBG:           '#2E5E87',			HeaderIcon:         '#FFF',			HeaderText:         '#FFF',			HeaderBorder:       '#2E5E87',			MenuBG:             '#000',			MenuBorder:         '#2E5E87',			MenuIcon:           '#FFF',			MenuRoomIcon:       '#FFF',			MenuText:           '#FFF',			MenuHoverLink:      '#2E5E87',			MainBG:             '#EEE',			TableHeaderBG:      '#2E5E87',			TableHeaderText:    '#FFF',			TableBorder:        '#2E5E87',			TableOdd:           '#EEE',			TableEven:          '#DDD',			TableText:          '#000',			TableHoverRow:      '#AAA',			TableHoverLink:     '#2E5E87',			TableNewEvent:      '#F00',			TableIcon:          '#2E5E87',			SetGetAttrBG:       '#CCC',			SubmitButtonBG:     '#2E5E87',			SubmitButtonBorder: '#555',			SubmitButtonText:   '#FFF',			WidgetBorder:       '#555',			WidgetText:         '#000',			WidgetHighlight:    '#2E5E87',			plotBG:             '#EEE',			plotBorder:         '#2E5E87',			plotText:           '#000',			plotGrid:           '#555',			plotMarker:         '#F00',			plotLine0:          '#F00',			plotLine1:          '#0F0',			plotLine2:          '#00F',			plotLine3:          '#F0F',			plotLine4:          '#A52A2A',			plotLine5:          '#000',			plotLine6:          '#808000',			plotLine7:          '#808080',			plotLine8:          '#FF0',			plotLinePasted:     '#000' };		this.defaultStyles.dark = {			HeaderBG:           '#000',			HeaderIcon:         '#FFF',			HeaderText:         '#FFF',			HeaderBorder:       '#555',			MenuBG:             '#000',			MenuBorder:         '#555',			MenuIcon:           '#FFF',			MenuRoomIcon:       '#FFF',			MenuText:           '#FFF',			MenuHoverLink:      '#06A',			MainBG:             '#000',			TableHeaderBG:      '#555',			TableHeaderText:    '#FFF',			TableBorder:        '#555',			TableOdd:           '#000',			TableEven:          '#222',			TableText:          '#FFF',			TableHoverRow:      '#444',			TableHoverLink:     '#06A',			TableNewEvent:      '#F00',			TableIcon:          '#FFF',			SetGetAttrBG:       '#000',			SubmitButtonBG:     '#000',			SubmitButtonBorder: '#555',			SubmitButtonText:   '#FFF',			WidgetBorder:       '#555',			WidgetText:         '#FFF',			WidgetHighlight:    '#06A',			plotBG:             '#000',			plotBorder:         '#555',			plotText:           '#FFF',			plotGrid:           '#999',			plotMarker:         '#F00',			plotLine0:          '#F00',			plotLine1:          '#0F0',			plotLine2:          '#00F',			plotLine3:          '#F0F',			plotLine4:          '#A52A2A',			plotLine5:          '#FFF',			plotLine6:          '#808000',			plotLine7:          '#808080',			plotLine8:          '#FF0',			plotLinePasted:     '#FFF' };		this.defaultStyles.fhem = {			HeaderBG:           '#FFFFE7',			HeaderIcon:         '#278727',			HeaderText:         '#000',			HeaderBorder:       '#FFFFE7',			MenuBG:             '#D7FFFF',			MenuBorder:         '#FFFFE7',			MenuIcon:           '#278727',			MenuRoomIcon:       '#278727',			MenuText:           '#278727',			MenuHoverLink:      '#80DDDD',			MainBG:             '#FFFFE7',			TableHeaderBG:      '#E0E0C8',			TableHeaderText:    '#000',			TableBorder:        '#FFFFE7',			TableOdd:           '#F0F0D8',			TableEven:          '#F8F8E0',			TableText:          '#278727',			TableHoverRow:      '#E0E0C8',			TableHoverLink:     '#278727',			TableNewEvent:      '#F00',			TableIcon:          '#278727',			SetGetAttrBG:       '#FFFFE7',			SubmitButtonBG:     '#FFFFE7',			SubmitButtonBorder: '#555',			SubmitButtonText:   '#000',			WidgetBorder:       '#555',			WidgetText:         '#000',			WidgetHighlight:    '#278727',			plotBG:             '#FFFFE7',			plotBorder:         '#555',			plotText:           '#000',			plotGrid:           '#555',			plotMarker:         '#F00',			plotLine0:          '#F00',			plotLine1:          '#0F0',			plotLine2:          '#00F',			plotLine3:          '#F0F',			plotLine4:          '#A52A2A',			plotLine5:          '#000',			plotLine6:          '#808000',			plotLine7:          '#808080',			plotLine8:          '#FF0',			plotLinePasted:     '#000' };	}		flex.shiftColor = function(color, color2) {		var rgb; var rgb2;		if (color.length <= 4)			rgb = /^#?([a-f\d]{1})([a-f\d]{1})([a-f\d]{1})$/i.exec(color);		else			rgb = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(color);		if (color2.length <= 4)			rgb2 = /^#?([a-f\d]{1})([a-f\d]{1})([a-f\d]{1})$/i.exec(color2);		else			rgb2 = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(color2);				var hex = ['FF','FF','FF'];		var whitecounter = 0;		for (i=1;i<rgb.length; i++) {			hex[i-1]=Math.min(255,parseInt((rgb[i].length==2) ? rgb[i] : rgb[i]+rgb[i], 16)+parseInt((rgb2[i].length==2) ? rgb2[i] : rgb2[i]+rgb2[i], 16)).toString(16);			if (hex[i-1] == 'ff') whitecounter++;		}		if (whitecounter > 1)			for (i=1;i<rgb.length; i++)				hex[i-1]=Math.min(255,parseInt((rgb[i].length==2) ? rgb[i] : rgb[i]+rgb[i], 16)-parseInt((rgb2[i].length==2) ? rgb2[i] : rgb2[i]+rgb2[i], 16)).toString(16);		return '#'+hex.join('');	}		flex.cmd = function(command,success) {		this.log('executing command: '+command);		return $.post(this.fhemPath,{cmd: command, fwcsrf: this.fwcsrf, XHR: 1},success);	}		flex.log = function(msg) {		log('flex > '+msg);	}			flex.enableDeviceSearch = function(defs) {		jQuery.ui.autocomplete.prototype._resizeMenu = function () {		  var ul = this.menu.element;		  ul.outerWidth(this.element.outerWidth());		}		// Modifyed version of Phill/ThoTo		// https://forum.fhem.de/index.php/topic,82442.0.html		$("input[name=cmd]").autocomplete({ source: defs, minLength: 3,	select: function(event, ui) {			if (ui.item) location.href = flex.fhemPath+'?detail=' + ui.item.value; }});	}		flex.enableCommandHistory = function() {		// modifyed version of FHEMAN		// https://forum.fhem.de/index.php?topic=68945.0		$.widget('ngn.inputHistory', {			_create: function() {				var s, _this = this;				this.h0 = (s = Cookies.get('fhemCmdHistory')) ? s.split('\n') : [];				this.h = this.h0.concat(['']);				this.i = this.h0.length;				return this.element.keydown(function(e) {					var key = e.which || e.keyCode; // keyCode detection					var ctrl = e.ctrlKey ? e.ctrlKey : ((key === 17) ? true : false); // ctrl detection					if (key == 13 && ctrl) {						return _this.ctrlenter();					}else if (key == 13) {						return _this.enter();					} else if (key == 38) {						return _this.up();					} else if (key == 40) {						return _this.down();					}				});			},			up: function() {				if (this.i > 0) {					this.h[this.i--] = this.element.val();					this.element.val(this.h[this.i]);				}				this._trigger('up');				return false;			},			down: function() {				if (this.i < this.h0.length) {					this.h[this.i++] = this.element.val();					this.element.val(this.h[this.i]);				}				this._trigger('down');				return false;			},			ctrlenter: function() {				var v;				v = this.element.val();				if (v.length > 0 && v[0] != '{') {					v = '{' + v;				}				if (v.length > 0 && v[v.length-1] != '}') {					v += '}';				}				this.element.val(v);				this._trigger('enter');				return false;			},			enter: function() {				var v;				this._trigger('enter');				if (this.i < this.h0.length) {					this.h[this.i] = this.h0[this.i];				}				v = this.element.val();				if (this.i >= 0 && this.i >= this.h0.length - 1 && this.h0[this.h0.length - 1] === v) {					this.h[this.h0.length] = '';				} else {					while (this.h0.length >= 50) {						this.h.shift();						this.h0.shift();					}					this.h[this.h0.length] = v;					this.h.push('');					this.h0.push(v);					Cookies.set('fhemCmdHistory',this.h0.join('\n'));				}				this.i = this.h0.length;			}		});		$('input.maininput').inputHistory();	}		flex.loadStyleData = function() {		flex.styleDataComplete = $("body").attr("data-styleData");		if (flex.styleDataComplete)			eval("flex.styleDataComplete="+flex.styleDataComplete);		if (!flex.styleDataComplete)			flex.styleDataComplete = {};		if (!flex.styleDataComplete.flex)			flex.styleDataComplete.flex = {};		flex.styleData = $.extend({},flex.styleDataComplete.flex,Cookies.getJSON('flexStyleData'));		flex.checkStyleData();	}		flex.writeStyleData = function (local) {		delete this.styleData.colorPreset;		if (local)			Cookies.set('flexStyleData',this.styleData);		else {			Cookies.remove('flexStyleData');			this.styleDataComplete.flex = $.extend({},this.styleDataComplete.flex,this.styleData);			this.cmd("attr "+this.webName+" styleData "+JSON.stringify(this.styleDataComplete, undefined, 1));		}	}		flex.deleteStyleData = function (local) {		if (local) {			Cookies.remove('flexStyleData');			this.styleData = this.styleDataComplete.flex;		} else {			delete this.styleDataComplete.flex;			this.cmd("attr "+this.webName+" styleData "+JSON.stringify(this.styleDataComplete, undefined, 1));			this.styleData = $.extend({},Cookies.getJSON('flexStyleData'));		}		this.checkStyleData();		this.applyStyleData();		this.refreshIcons();		this.createSettingsHTML();	}		flex.loadSVGIcons = function() {		this.svgicons={};		this.svgicons.fhem_save  = '<svg viewBox="0 0 611.923 611.923" xmlns="http://www.w3.org/2000/svg"><path d="M606.157,120.824L489.908,4.575c-2.46-2.46-6.612-4.152-10.764-4.152H434.32H175.988H40.672   C18.222,0.423,0,18.721,0,41.095v529.734c0,22.45,18.298,40.672,40.672,40.672h86.341h368.661h75.577   c22.45,0,40.672-18.299,40.672-40.672V131.665C611.077,128.359,609.463,124.207,606.157,120.824z M419.328,31.177v136.162   c0,0.846-0.846,0.846-0.846,0.846h-42.363V31.177H419.328z M344.596,31.177v137.008H192.595c-0.846,0-0.846-0.846-0.846-0.846   V31.177H344.596z M141.929,580.9V390.688c0-35.674,29.062-64.737,64.737-64.737h208.434c35.674,0,64.737,29.062,64.737,64.737   v190.135H141.929V580.9z M580.401,570.905c0,4.997-4.152,9.995-9.995,9.995h-59.816V390.688c0-52.281-43.209-95.49-95.49-95.49   H207.511c-52.281,0-95.49,43.209-95.49,95.49v190.135H40.595c-4.997,0-9.995-4.152-9.995-9.995V41.095   c0-4.997,4.152-9.995,9.995-9.995h120.401v136.162c0,17.453,14.147,31.523,31.523,31.523h225.886   c17.453,0,31.523-14.147,31.523-31.523V31.177h23.219l107.1,107.1L580.401,570.905L580.401,570.905z M422.634,490.33   c0,8.304-6.612,14.916-14.916,14.916H217.506c-8.304,0-14.916-6.612-14.916-14.916c0-8.303,6.612-14.916,14.916-14.916h189.289   C415.945,475.415,422.634,482.027,422.634,490.33z M422.634,410.678c0,8.303-6.612,14.916-14.916,14.916H217.506   c-8.304,0-14.916-6.612-14.916-14.916s6.612-14.916,14.916-14.916h189.289C415.945,394.84,422.634,401.529,422.634,410.678z"/></svg>';		this.svgicons.fhem_save_check  = '<svg viewBox="0 0 611.923 611.923" xmlns="http://www.w3.org/2000/svg"><path d="M606.157,120.824L489.908,4.575c-2.46-2.46-6.612-4.152-10.764-4.152H434.32H175.988H40.672   C18.222,0.423,0,18.721,0,41.095v529.734c0,22.45,18.298,40.672,40.672,40.672h86.341h368.661h75.577   c22.45,0,40.672-18.299,40.672-40.672V131.665C611.077,128.359,609.463,124.207,606.157,120.824z M419.328,31.177v136.162   c0,0.846-0.846,0.846-0.846,0.846h-42.363V31.177H419.328z M344.596,31.177v137.008H192.595c-0.846,0-0.846-0.846-0.846-0.846   V31.177H344.596z M141.929,580.9V390.688c0-35.674,29.062-64.737,64.737-64.737h208.434c35.674,0,64.737,29.062,64.737,64.737   v190.135H141.929V580.9z M580.401,570.905c0,4.997-4.152,9.995-9.995,9.995h-59.816V390.688c0-52.281-43.209-95.49-95.49-95.49   H207.511c-52.281,0-95.49,43.209-95.49,95.49v190.135H40.595c-4.997,0-9.995-4.152-9.995-9.995V41.095   c0-4.997,4.152-9.995,9.995-9.995h120.401v136.162c0,17.453,14.147,31.523,31.523,31.523h225.886   c17.453,0,31.523-14.147,31.523-31.523V31.177h23.219l107.1,107.1L580.401,570.905L580.401,570.905z M422.634,490.33   c0,8.304-6.612,14.916-14.916,14.916H217.506c-8.304,0-14.916-6.612-14.916-14.916c0-8.303,6.612-14.916,14.916-14.916h189.289   C415.945,475.415,422.634,482.027,422.634,490.33z M422.634,410.678c0,8.303-6.612,14.916-14.916,14.916H217.506   c-8.304,0-14.916-6.612-14.916-14.916s6.612-14.916,14.916-14.916h189.289C415.945,394.84,422.634,401.529,422.634,410.678z"/><path style="fill:#ff0000;fill-opacity:1" d="m 427.98662,183.39874 q 0,24.65821 -7.32422,43.70117 -7.08008,18.79883 -20.26367,32.71485 -13.1836,13.91601 -31.73828,24.90234 -18.31055,10.98633 -41.50391,20.01953 v 55.66407 h -85.9375 v -82.27539 q 17.33398,-4.63868 31.25,-9.52149 14.16016,-4.88281 29.54102,-15.86914 14.40429,-9.76562 22.46093,-22.70508 8.30078,-12.93945 8.30078,-29.29687 0,-24.41407 -15.86914,-34.66797 -15.625,-10.49805 -44.18945,-10.49805 -17.57812,0 -39.79492,7.56836 -21.97266,7.56836 -40.2832,19.53125 h -9.76563 v -74.46289 q 15.625,-6.5918 48.0957,-13.671875 32.47071,-7.324219 65.91797,-7.324219 60.30274,0 95.70313,26.611324 35.40039,26.61133 35.40039,69.58008 z m -93.99414,274.65821 h -98.63282 v -64.45313 h 98.63282 z"/></svg>';		this.svgicons.reload_my  = '<svg viewBox="0 0 400 399.999" xmlns="http://www.w3.org/2000/svg"><path d="m 301.75738,175.2197 -33.5083,55.72509 v 35.15625 h -23.4375 V 232.04343 L 210.75396,175.2197 h 26.61133 l 19.65332,35.15625 18.98193,-35.15625 z M 198.669,266.10104 h -23.31543 v -60.85205 l -16.8457,39.48975 h -16.17432 l -16.8457,-39.48975 v 60.85205 H 103.39312 V 175.2197 h 27.22168 l 20.44678,45.59326 20.38574,-45.59326 H 198.669 Z M 361.796,209.654 c -7.887,0 -14.279,6.393 -14.279,14.275 0,81.342 -66.172,147.518 -147.519,147.518 -81.342,0 -147.515,-66.176 -147.515,-147.518 0,-76.521 58.575,-139.585 133.239,-146.796 v 32.863 c 0,5.099 2.725,9.812 7.137,12.362 2.21,1.274 4.677,1.914 7.139,1.914 2.466,0 4.927,-0.639 7.136,-1.914 l 82.904,-47.857 c 4.42,-2.548 7.137,-7.26 7.137,-12.361 0,-5.1 -2.717,-9.815 -7.137,-12.363 L 207.134,1.913 c -4.418,-2.551 -9.855,-2.551 -14.275,0 -4.412,2.548 -7.137,7.264 -7.137,12.363 v 34.212 c -90.426,7.298 -161.791,83.167 -161.791,175.44 0,97.085 78.984,176.07 176.066,176.07 97.088,0 176.071,-78.985 176.071,-176.07 0,-7.881 -6.389,-14.274 -14.272,-14.274 z"/></svg>';		this.svgicons.reread_icons  = '<svg viewBox="0 0 400 399.999" xmlns="http://www.w3.org/2000/svg"><path d="m 326.70757,220.69089 q 0,21.72851 -12.45117,34.5459 -12.45117,12.75634 -34.42383,12.75634 -21.91162,0 -34.36279,-12.75634 -12.45117,-12.81739 -12.45117,-34.5459 0,-21.91162 12.45117,-34.60694 12.45117,-12.75634 34.36279,-12.75634 21.85059,0 34.3628,12.75634 12.5122,12.69532 12.5122,34.60694 z m -31.06689,23.01025 q 3.41797,-4.15039 5.06592,-9.76562 1.64795,-5.67627 1.64795,-13.30567 0,-8.17871 -1.89209,-13.91601 -1.89209,-5.73731 -4.94385,-9.27735 -3.11279,-3.66211 -7.20215,-5.31006 -4.02832,-1.64794 -8.42285,-1.64794 -4.45557,0 -8.42285,1.58691 -3.90625,1.58691 -7.20215,5.24902 -3.05176,3.41797 -5.00488,9.46045 -1.89209,5.98145 -1.89209,13.91602 0,8.11767 1.83105,13.85498 1.89209,5.67627 4.94385,9.27734 3.05176,3.60108 7.14111,5.31006 4.08936,1.70898 8.60596,1.70898 4.5166,0 8.60596,-1.70898 4.08935,-1.77002 7.14111,-5.43213 z m -106.81153,24.16992 q -10.13183,0 -18.73779,-2.99072 -8.54492,-2.99072 -14.70947,-8.91113 -6.16455,-5.92041 -9.58252,-14.77051 -3.35693,-8.8501 -3.35693,-20.44678 0,-10.80322 3.23486,-19.59228 3.23486,-8.78907 9.39941,-15.07569 5.92041,-6.04248 14.64844,-9.33838 8.78906,-3.29589 19.16504,-3.29589 5.7373,0 10.31494,0.67138 4.63867,0.61035 8.54492,1.64795 4.08936,1.15967 7.38526,2.62451 3.35693,1.40381 5.85937,2.62452 v 22.03369 h -2.68554 q -1.70899,-1.46485 -4.3335,-3.47901 -2.56348,-2.01416 -5.85938,-3.96728 -3.35693,-1.95313 -7.26318,-3.2959 -3.90625,-1.34277 -8.36182,-1.34277 -4.94384,0 -9.39941,1.58691 -4.45557,1.52588 -8.23975,5.12695 -3.60107,3.47901 -5.85937,9.21631 -2.19727,5.73731 -2.19727,13.91602 0,8.54492 2.38037,14.28222 2.44141,5.73731 6.10352,9.03321 3.72314,3.35693 8.30078,4.82177 4.57764,1.40381 9.0332,1.40381 4.27247,0 8.42286,-1.28173 4.21142,-1.28174 7.75146,-3.47901 2.99072,-1.77002 5.5542,-3.78418 2.56348,-2.01416 4.21143,-3.479 h 2.4414 v 21.72851 q -3.41797,1.52588 -6.53076,2.86866 -3.11279,1.34277 -6.53076,2.31933 -4.45557,1.28174 -8.36182,1.95313 -3.90625,0.67138 -10.74219,0.67138 z m -60.30273,-1.77002 H 75.303764 V 249.98776 H 90.196342 V 191.33298 H 75.303764 V 175.2197 h 53.222656 v 16.11328 h -14.89258 v 58.65478 h 14.89258 z M 361.796,209.654 c -7.887,0 -14.279,6.393 -14.279,14.275 0,81.342 -66.172,147.518 -147.519,147.518 -81.342,0 -147.515,-66.176 -147.515,-147.518 0,-76.521 58.575,-139.585 133.239,-146.796 v 32.863 c 0,5.099 2.725,9.812 7.137,12.362 2.21,1.274 4.677,1.914 7.139,1.914 2.466,0 4.927,-0.639 7.136,-1.914 l 82.904,-47.857 c 4.42,-2.548 7.137,-7.26 7.137,-12.361 0,-5.1 -2.717,-9.815 -7.137,-12.363 L 207.134,1.913 c -4.418,-2.551 -9.855,-2.551 -14.275,0 -4.412,2.548 -7.137,7.264 -7.137,12.363 v 34.212 c -90.426,7.298 -161.791,83.167 -161.791,175.44 0,97.085 78.984,176.07 176.066,176.07 97.088,0 176.071,-78.985 176.071,-176.07 0,-7.881 -6.389,-14.274 -14.272,-14.274 z"/></svg>';		this.svgicons.fhem_update  = '<svg viewBox="0 0 580 580" xmlns="http://www.w3.org/2000/svg"><path d="m 66.152344,477.72852 c -18.513979,0 -35.710938,14.13868 -35.710938,33.55859 v 29.55664 c 0,19.41991 17.196959,33.55859 35.710938,33.55859 H 347.33398 v -0.002 -32.92383 H 240.85938 V 510.6543 H 522.0625 c 2.8107,0 2.78711,1.10658 2.78711,0.63281 v 29.55664 c 0,-0.47378 0.0233,0.63281 -2.78711,0.63281 l -174.72656,0.002 -0.002,32.92187 174.72852,0.002 c 18.51395,1.9e-4 35.72852,-14.1387 35.72852,-33.55859 v -29.55664 c 0,-19.41989 -17.21457,-33.55859 -35.72852,-33.55859 z M 227.21388,181.63764 c -1.62649,-1.62649 -2.23924,-4.04007 -2.23924,-9.22486 0,-7.5879 4.78197,-6.59414 18.5877,-10.31164 30.82717,-8.30089 36.7093,-11.0912 38.14774,1.36912 1.12477,9.74321 -6.20012,8.69131 -19.97841,12.30515 -31.55919,8.27749 -31.61844,8.76157 -34.51779,5.86223 z m 138.63821,8.23614 c -19.85794,-10.49665 -23.65922,-9.38355 -19.25326,-20.9495 3.45938,-9.08112 7.77389,-4.26462 31.72624,7.96198 16.56383,8.45509 23.5553,8.39399 22.52408,15.69571 -1.79495,12.70935 -11.77027,9.56919 -34.99706,-2.70819 z M 266.76617,345.7819 c -41.9322,-13.65946 -70.54722,-49.21372 -70.54722,-87.65517 0,-17.12736 0.51475,-17.89237 11.2047,-16.65223 9.7161,1.12715 5.001,3.67203 7.62554,19.15528 4.4671,26.35332 21.00992,48.20403 42.90779,59.47307 50.48959,25.98284 121.33367,4.96051 130.90277,-38.60732 2.27014,-10.33586 -1.02999,-16.12743 8.97541,-16.12743 14.16682,0 13.87223,8.08445 3.91622,31.91253 -14.25796,34.12411 -40.8295,49.51627 -86.68893,51.51336 -18.95317,0.82538 -37.36236,0.54964 -48.29628,-3.01209 z m 181.68587,32.51383 c 7.90781,-63.53593 28.59394,-206.72144 28.59394,-210.46353 0,-3.84769 -43.02608,-39.29831 -81.05388,-69.962309 L 328.74816,43.647242 245.92951,79.64763 c -42.01909,18.265255 -92.32125,40.75248 -92.62997,43.87052 -0.97101,9.80731 -39.87928,246.72561 -26.72547,259.37364 9.89424,9.51379 285.15543,35.8103 301.82037,36.27852 16.07334,10.01889 18.9651,-32.40206 20.0576,-40.87458 z m -344.68841,28.2183 c -4.155232,-1.5945 -6.135607,-8.18591 -6.135607,-20.42148 0,-16.01274 21.079537,-199.77085 26.956707,-234.99162 2.10159,-12.59444 1.65569,-13.29182 -5.90981,-9.2429 -14.29161,7.64864 -24.571646,5.09916 -31.211293,-7.7405 C 84.016543,127.4516 81.257085,119.59514 81.331505,116.65872 81.405982,113.71991 136.90234,85.603734 204.77967,54.116063 308.26603,6.1096827 329.68235,-2.4766341 337.98053,0.71263864 351.83814,6.0385946 549.50313,167.13938 549.50313,173.10764 c 0,7.26457 -16.22199,26.53317 -22.33792,26.53317 -2.92038,0 -9.88086,-3.59562 -15.46776,-7.99027 l -10.15799,-7.99027 -15.76198,127.31806 c -8.6691,70.02493 -18.05173,130.44946 -20.85032,134.27676 -4.75021,6.49632 -12.75531,6.00369 -120.46645,-7.41367 -139.99347,-18.83802 4.36523,0.17048 -240.69708,-31.32739 z"/></svg>';		this.svgicons.fhem_update_check  = '<svg viewBox="0 0 468 468" xmlns="http://www.w3.org/2000/svg"><path d="m 262.50148,231.56171 h -52.88086 v -7.17774 q 0,-12.01172 4.83399,-21.24023 4.83398,-9.375 20.36132,-23.73047 l 9.375,-8.49609 q 8.34961,-7.61719 12.15821,-14.35547 3.95507,-6.73828 3.95507,-13.47657 0,-10.2539 -7.03125,-15.96679 -7.03125,-5.85938 -19.6289,-5.85938 -11.86524,0 -25.63477,4.98047 -13.76953,4.83399 -28.71093,14.50195 V 94.7453 q 17.7246,-6.152343 32.37304,-9.082031 14.64844,-2.929687 28.27149,-2.929687 35.74218,0 54.49218,14.648437 18.75,14.501951 18.75,42.480471 0,14.35547 -5.71289,25.78125 -5.71289,11.27929 -19.48242,24.3164 l -9.375,8.34961 q -9.96094,9.08203 -13.03711,14.64844 -3.07617,5.41992 -3.07617,12.01172 z m -52.88086,21.67968 h 52.88086 v 52.14844 H 209.62062 Z M 52.921875,382.18282 c -14.811183,0 -28.56875,11.31094 -28.56875,26.84687 V 432.675 c 0,15.53593 13.757567,26.84687 28.56875,26.84687 H 277.86718 v -0.002 -26.33906 H 192.6875 V 408.52344 H 417.65 c 2.24856,0 2.22969,0.88526 2.22969,0.50625 V 432.675 c 0,-0.37902 0.0186,0.50625 -2.22969,0.50625 l -139.78125,0.002 -0.002,26.33749 139.78282,0.002 c 14.81116,1.5e-4 28.58282,-11.31096 28.58282,-26.84687 v -23.64531 c 0,-15.53591 -13.77166,-26.84687 -28.58282,-26.84687 z M 358.76163,302.63658 c 6.32625,-50.82874 22.87516,-165.37715 22.87516,-168.37082 0,-3.07815 -34.42087,-31.43865 -64.84311,-55.969847 L 262.99853,34.917794 196.74361,63.718104 C 163.12834,78.330308 122.8866,96.320086 122.63963,98.814522 121.86282,106.66037 90.736205,296.195 101.25925,306.31343 c 7.9154,7.61103 228.12435,28.64824 241.4563,29.02282 12.85868,8.01511 15.17208,-25.92165 16.04608,-32.69967 z M 83.010902,325.21122 c -3.324183,-1.2756 -4.908484,-6.54873 -4.908484,-16.33718 0,-12.81019 16.863627,-159.81668 21.565366,-187.99329 1.681276,-10.07556 1.324546,-10.63347 -4.727846,-7.39432 -11.433291,6.11891 -19.657319,4.07932 -24.969037,-6.19241 C 67.213234,101.96128 65.005668,95.67611 65.065204,93.326974 65.124786,90.975926 109.52187,68.482987 163.82374,43.29285 246.61283,4.8877462 263.74588,-1.9813073 270.38442,0.57011092 281.47051,4.8308757 439.6025,133.7115 439.6025,138.48612 c 0,5.81165 -12.97759,21.22653 -17.87033,21.22653 -2.33631,0 -7.90469,-2.8765 -12.37421,-6.39222 l -8.12639,-6.39222 -12.60958,101.85445 c -6.93528,56.01995 -14.44139,104.35957 -16.68026,107.42141 -3.80017,5.19706 -10.20425,4.80296 -96.37316,-5.93093 -111.99478,-15.07042 3.49218,0.13638 -192.557668,-25.06192 z"/></svg>';		this.svgicons.fhem_restart  = '<svg viewBox="0 0 468 468" xmlns="http://www.w3.org/2000/svg"><path d="M 28.699094,123.76564 C 90.589444,12.606476 155.68111,12.077856 156.31376,12.761996 c 6.88313,41.38028 6.92061,36.88113 6.92061,36.88113 -41.7943,15.26911 -78.176696,46.62509 -99.237296,90.447414 -42.12116,87.64458 -14.90766,210.64661 70.508686,251.6969 l 16.68081,-33.97897 67.38275,99.97796 -116.03856,-0.11269 15.31268,-33.45269 C 17.781334,363.26642 -30.391766,229.89673 28.699094,123.76564 Z M 443.63875,350.1535 C 381.7484,461.31266 316.65673,461.84128 316.02408,461.15714 c -6.88313,-41.38028 -6.92061,-36.88113 -6.92061,-36.88113 41.7943,-15.26911 78.1767,-46.62509 99.2373,-90.44741 42.12116,-87.64458 14.90766,-210.64661 -70.50869,-251.696902 L 321.15127,116.11067 253.76852,16.13271 369.80708,16.245401 354.4944,49.698092 C 454.55651,110.65273 502.72961,244.02241 443.63875,350.1535 Z M 185.51169,193.827 c -1.07278,-1.07278 -1.47693,-2.66469 -1.47693,-6.08441 0,-5.00474 3.15403,-4.34929 12.25985,-6.80123 20.33259,-5.475 24.21226,-7.31539 25.16101,0.90303 0.74186,6.42631 -4.0894,5.73251 -13.17712,8.11608 -20.81541,5.45956 -20.85449,5.77885 -22.76681,3.86653 z m 91.44127,5.4323 c -13.09766,-6.92325 -15.60486,-6.18909 -12.69883,-13.81761 2.28169,-5.98961 5.12741,-2.81281 20.9256,5.25146 10.92496,5.5767 15.53631,5.5364 14.85615,10.35238 -1.18389,8.38268 -7.76329,6.31153 -23.08292,-1.78623 z M 211.5991,302.09123 c -27.65712,-9.00933 -46.53066,-32.45977 -46.53066,-57.8145 0,-11.29665 0.33952,-11.80123 7.39026,-10.98328 6.40842,0.74344 3.2985,2.42196 5.02956,12.6342 2.94635,17.3818 13.85746,31.79382 28.30058,39.22651 33.3013,17.13744 80.02776,3.27179 86.33922,-25.46413 1.49731,-6.8172 -0.67935,-10.63713 5.91989,-10.63713 9.34398,0 9.14967,5.33224 2.58301,21.04847 -9.40409,22.50715 -26.92981,32.65932 -57.1772,33.97654 -12.5009,0.54439 -24.643,0.36252 -31.85466,-1.98668 z m 119.8341,21.44506 c 5.21574,-41.90623 18.85964,-136.34674 18.85964,-138.81491 0,-2.53781 -28.37861,-25.91989 -53.46051,-46.14486 l -44.35192,-35.7635 -54.62449,23.74468 c -27.71443,12.04717 -60.89211,26.87902 -61.09572,28.93558 -0.64045,6.46858 -26.30309,162.7322 -17.62726,171.07443 6.52592,6.27499 188.07927,23.61931 199.07092,23.92813 10.60146,6.60814 12.50876,-21.37134 13.22934,-26.95955 z m -227.34529,18.61188 c -2.74065,-1.05168 -4.04684,-5.39916 -4.04684,-13.46935 0,-10.56148 13.90337,-131.76236 17.77977,-154.99284 1.38614,-8.30688 1.09203,-8.76685 -3.89792,-6.09631 -9.42628,5.04479 -16.206661,3.36324 -20.585957,-5.10539 -2.273584,-4.39663 -4.093633,-9.5785 -4.044548,-11.51526 0.04912,-1.93835 36.652715,-20.48286 81.422405,-41.25111 68.25624,-31.663447 82.38175,-37.326703 87.85496,-35.223163 9.14003,3.512828 139.51344,109.769673 139.51344,113.706153 0,4.79147 -10.6995,17.50041 -14.73336,17.50041 -1.9262,0 -6.5171,-2.37155 -10.20204,-5.27012 l -6.69988,-5.27013 -10.39609,83.97486 c -5.71786,46.18617 -11.90633,86.04023 -13.75219,88.56459 -3.13309,4.28477 -8.41299,3.95985 -79.45576,-4.88981 -92.33515,-12.42494 2.87916,0.11244 -158.75599,-20.66253 z"/></svg>';		this.svgicons.menu_button = '<svg viewBox="0 0 1792 1792" xmlns="http://www.w3.org/2000/svg"><path d="M1664 1344v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zm0-512v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zm0-512v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45z"/></svg>';		this.svgicons.raw_button = '<svg viewBox="0 0 1792 1792" xmlns="http://www.w3.org/2000/svg"><path d="M 1302,839 V 939 c 0,19 -15,37 -36,37 H 993 v 277 c 0,19 -15,37 -36,37 H 856 c -20,0 -36,-15 -36,-37 V 977 H 546 c -20,0 -36,-15 -36,-37 V 839 c 0,-19 15,-37 36,-37 H 818 V 521 c 0,-19 15,-37 36,-37 h 97 c 20,0 36,15 36,37 V 798 H 1261 c 20,0 36,15 36,37 z M 1600,331 V 1447 c 0,83 -65,151 -148,151 H 360 C 277,1600 212,1532 212,1448 V 331 C 212,246 277,180 360,180 H 1450 c 81,0 147,66 147,151 z M 1450,1428 V 350 c 0,-8 -7,-17 -17,-17 H 379 c -9,0 -17,7 -17,17 V 1428 c 0,8 7,17 17,17 H 1431 c 9,0 17,-7 17,-17 z"/></svg>';		this.svgicons.message_garbage = '<svg viewBox="0 0 850 850" xmlns="http://www.w3.org/2000/svg"><path d="M 327.53711,0.78320312 C 317.4992,0.75646054 297.47606,4.7952298 236.0625,17.279297 c -77.02779,15.815592 -82.006,17.281657 -89.03516,25.189453 -6.44339,7.614915 -7.03072,10.250814 -5.27343,26.066406 0.87864,9.957966 2.63698,21.964289 3.51562,26.650391 l 1.75781,9.080073 -65.021481,13.47266 c -74.3918598,15.52271 -79.0761715,17.86576 -79.0761715,39.2461 0,14.64406 10.2497655,28.99483 22.5507815,31.33789 C 30.16657,189.20091 132.38201,168.99356 267.10742,140.87695 523.96436,86.986787 515.4707,89.329644 515.4707,68.242188 c 0,-12.008135 -6.73664,-26.067631 -14.35156,-30.167969 -9.3722,-4.978983 -23.13636,-3.513907 -80.83398,8.787109 -30.45966,6.44339 -56.23278,10.542619 -57.4043,9.371094 -0.87864,-1.171525 -3.22327,-9.957875 -5.27344,-19.330078 C 353.79996,16.40065 348.23522,6.7371449 337.98438,2.9296875 334.59793,1.6483316 332.09979,0.79535884 327.53711,0.78320312 Z M 321.29102,32.509766 c 1.75728,0 4.68607,6.443941 6.44336,14.9375 2.05016,8.200677 2.3434,16.107771 1.17187,17.279296 -1.46441,0.878645 -35.14674,8.787604 -75.27148,16.988282 -55.0617,11.422372 -73.51225,14.350776 -75.26954,11.714844 -2.34305,-3.807458 -6.7358,-28.996444 -4.97851,-30.167969 0.87864,-0.878644 141.46091,-29.873309 147.9043,-30.751953 z M 143.88281,240.69336 c -90.651348,0 -104.490245,1.1543 -111.080076,4.44922 -5.271864,2.63593 -13.179045,9.3708 -17.572265,14.93554 -7.6149151,10.25085 -7.908116,11.42214 -7.6152346,51.54688 0.2928813,57.99051 32.8027916,484.71895 39.5390626,518.10742 4.39322,21.38034 13.764281,30.1668 35.4375,32.80274 8.493559,0.87864 94.307963,1.46467 190.373043,0.8789 l 174.5586,-0.8789 7.61328,-7.0293 c 11.42237,-10.54373 16.10838,-30.16616 19.33008,-76.44141 1.75728,-23.4305 3.51588,-48.3264 4.39453,-55.64843 4.39322,-37.7817 30.75195,-402.41858 30.75195,-424.0918 0,-22.25898 -4.9781,-36.60888 -16.69336,-48.03125 l -9.95898,-9.66602 -220.2461,-0.58593 c -49.86304,-0.21967 -88.61491,-0.34766 -118.83203,-0.34766 z M 63.847656,298.73828 H 257.73633 451.62305 l -1.75782,18.16016 c -1.17152,10.25084 -6.44306,82.88493 -12.00781,161.96289 -5.56474,78.78508 -13.47193,181.87922 -17.57226,228.74023 -4.10034,47.1539 -7.32227,87.5711 -7.32227,90.20703 0,4.10034 -14.64352,4.68555 -155.22656,4.68555 -130.62508,0 -155.22852,-0.58503 -155.22852,-4.09961 0,-2.34305 -3.806171,-50.6693 -8.785154,-107.48828 C 89.036555,633.79439 81.127508,530.40906 76.441406,461.28906 71.462423,391.87619 66.776994,327.14928 65.605469,316.89844 Z m 313.970704,29.67578 c -3.88247,-0.11262 -7.34249,1.20518 -13.76758,4.00586 -4.97898,2.05017 -10.83655,7.03044 -12.88672,10.83789 -4.39322,8.20068 -17.86605,410.03227 -14.05859,419.99024 6.15051,16.69423 35.14642,21.67389 48.0332,8.78711 3.80746,-3.80746 7.6155,-10.25114 8.49414,-14.0586 0.87865,-3.51457 4.39354,-96.64996 7.61524,-206.48047 6.73627,-221.71117 7.32235,-213.51177 -12.00782,-220.24804 -5.12542,-1.7939 -8.40218,-2.74639 -11.42187,-2.83399 z m -120.52148,0.0156 c -3.66102,0.0366 -7.32211,1.3543 -13.32618,3.99023 -4.97898,2.05017 -10.54349,6.73729 -12.30078,9.95899 -2.34305,4.10033 -3.22248,67.06935 -2.63672,214.38867 l 0.87891,208.23828 8.20117,7.0293 c 9.07932,7.61491 26.94455,9.66426 37.48828,3.80664 13.47254,-7.02916 13.76519,-8.78629 12.30078,-222.00391 -0.87864,-135.89694 -2.34241,-203.55253 -4.39257,-209.41016 -2.05017,-4.97898 -7.0291,-9.95773 -12.88672,-12.30078 -6.00407,-2.48949 -9.66516,-3.73387 -13.32617,-3.69726 z m -121.9961,0.68164 c -2.84465,0.0695 -5.53513,0.56426 -7.89648,1.55273 -14.64407,6.44339 -17.28108,13.17945 -16.69532,45.10352 2.34306,108.95186 12.88742,381.0369 15.23047,386.89453 6.44339,17.28 35.14456,22.55262 48.32422,9.08008 6.73627,-6.44339 7.32227,-9.37179 7.32227,-31.33789 0,-53.59729 -12.5925,-387.77528 -14.93555,-393.92578 -3.80746,-9.99458 -19.02278,-17.66837 -31.34961,-17.36719 z"/></svg>';	}		flex.refreshIcons = function() {		this.showMenuIcons();		$("#rawBtn").css('display',(this.styleData.showRawInputButton) ? 'inline-block' : 'none');	}		flex.showMenuIcons = function () {		// menu icons will be added to roomBlock1		var menuIcons = $('#menuIcons');		if (!menuIcons.length)			menuIcons = $('<div>',{id: 'menuIcons'}).prependTo($('#menuScrollArea'));		// restart icon		if (!menuIcons.children('#iconFhemRestart').length)			$('<a>',{id: "iconFhemRestart", style: "cursor: pointer;", title: 'restart'})				.click(function() {flex.cmd('shutdown restart');})				.html(this.svgicons.fhem_restart)				.appendTo(menuIcons);		// update icon		if (!menuIcons.children('#iconFhemUpdate').length)			$('<a>',{id: "iconFhemUpdate", href: this.fhemPath+'?cmd=update&fwcsrf='+this.fwcsrf, title: 'update'})				.html(this.svgicons.fhem_update)				.appendTo(menuIcons);		// update check		if (!menuIcons.children('#iconFhemUpdateCheck').length)			$('<a>',{id: "iconFhemUpdateCheck", href: this.fhemPath+'?cmd=update+check&fwcsrf='+this.fwcsrf, title: 'update check'})				.html(this.svgicons.fhem_update_check)				.appendTo(menuIcons);		// reread icons		if (!menuIcons.children('#iconFhemRereadIcons').length)			$('<a>',{id: "iconFhemRereadIcons", style: "cursor: pointer;", title: 'reread icons'})				.click(function() {flex.cmd('set '+flex.webName+' rereadicons');})				.html(this.svgicons.reread_icons)				.appendTo(menuIcons);		// reload myUtils		if (!menuIcons.children('#iconFhemReloadMyUtils').length)			$('<a>',{id: "iconFhemReloadMyUtils", style: "cursor: pointer;", title: 'reload '+this.styleData.myUtilsFileName})				.click(function() {flex.cmd('reload '+flex.styleData.myUtilsFileName);})				.html(this.svgicons.reload_my)				.appendTo(menuIcons);		// "close menu" button		if (!menuIcons.children('.closebtn').length)			$("<div class='closebtn' title='Close menu'>&times;</div>")				.click(this.hideMenu)				.appendTo(menuIcons);				if ($('.roomBlock1').length==1){			if ($('.roomBlock1 .menu_Save_config').length==1) {				// move save icons to #menuIcons				var menu_Save_config = $('.menu_Save_config')				menu_Save_config.appendTo(menuIcons);				$('.roomBlock1').parent().parent().remove();				// load save icon instead of text "Save config"				var fhem_save = menu_Save_config.find('a:nth-child(1)');				fhem_save.html(this.svgicons.fhem_save)						 .attr('title', 'save config')						 .css('display', 'inline-block');				// load save check icon instead of text "?"				var fhem_save_check = menu_Save_config.find('a:nth-child(2)');				fhem_save_check.html(this.svgicons.fhem_save_check)							   .attr('title', 'save check')							   .css('display','inline-block');			} else {				$('#menu table.room').each(function(index) {					$(this).removeClass('roomBlock'+(index+1));					$(this).addClass('roomBlock'+(index+2));				});			}		}						// show icons or not?		menuIcons.children('#iconFhemRestart')      .css('display',(this.styleData.showRebootButton)       ? 'inline-block' : 'none');		menuIcons.children('#iconFhemUpdate')       .css('display',(this.styleData.showUpdateButton)       ? 'inline-block' : 'none');		menuIcons.children('#iconFhemUpdateCheck')  .css('display',(this.styleData.showUpdateCheckButton)  ? 'inline-block' : 'none');		menuIcons.children('#iconFhemRereadIcons')  .css('display',(this.styleData.showRereadIconsButton)  ? 'inline-block' : 'none');		menuIcons.children('#iconFhemReloadMyUtils').css('display',(this.styleData.myUtilsFileName !== '') ? 'inline-block' : 'none');		menuIcons.children('.menu_Save_config')     .css('display',(this.styleData.showSaveButton)         ? 'inline-block' : 'none');	}		flex.refreshCmdPlaceholder = function() {		// default placeholder text		var msg = this.styleData.title;		if ($('#errmsg').length == 1)			msg = $('#errmsg')[0].innerText;		else if (this.device && this.styleData.showRoomDeviceName)			msg = this.device;		else if (this.room && this.styleData.showRoomDeviceName)			msg = this.room;		if (this.styleData.showClock) {			if ($('#errmsg').length == 1 && msg.match(/connection/i)){				this.fhemSyncTime = undefined;				this.currentTime = undefined;			}			if ((!this.fhemSyncTime || (this.currentTime-this.fhemSyncTime) >= 120) && !msg.match(/connection/i)) {				this.cmd('{time()}',function(data) {					flex.fhemSyncTime = parseFloat(data); 					flex.currentTime = flex.fhemSyncTime;				});			}						// current time			if (this.currentTime) {				this.currentTime = this.currentTime + 0.5;				d = new Date(this.currentTime*1000);			} else				d = new Date();			nhour = d.getHours();			nmin = d.getMinutes();			nsec = d.getSeconds();			if (nhour <= 9) nhour='0'+nhour;			if (nmin <= 9) nmin='0'+nmin;			if (nsec <= 9) nsec='0'+nsec;			var timestring = nhour + ':' + nmin + ':' + nsec;						if (msg !== '')				msg = msg+' // '+timestring;			else				msg = timestring;		}		$('.maininput').attr("placeholder", msg);		// refresh once a second		setTimeout(function(){flex.refreshCmdPlaceholder();}, 500);	}		flex.prepareCommandBar = function() {		// raw-input button		$("<div id='rawBtn'></div>")			.prependTo($("#hdr form"))			.html(this.svgicons.raw_button)			.click(function(){ f18_textInput() })			.attr('title', 'Raw FHEM-code input')			.css('display',(this.styleData.showRawInputButton) ? 'inline-block' : 'none');					// menu button		$("<div id='menuBtn'></div>")			.prependTo($("#hdr form"))			.html(this.svgicons.menu_button)			.click(this.showMenu)			.attr('title', 'Show menu');		// wrap cmd-input		var cmdInput = $("<div id='cmdInput'></div>")			.appendTo($("#hdr form"));		$('input[name=cmd]').appendTo(cmdInput);		// enable autocomplete		if (this.styleData.enableDeviceSearch)			this.cmd('list .*',function(data){flex.enableDeviceSearch(data.split('\n'));});		if (this.styleData.enableCommandHistory)			this.enableCommandHistory();	}		flex.showMenu = function() {		$("#menuScrollArea, #content, #hdr, #contentOverlay").removeClass("hidden");		$("#menuBtn").click(function(){flex.hideMenu()}).attr('title', 'Close menu');		setTimeout(this.checkWrapped, 500);	}	flex.hideMenu = function() {		$("#menuScrollArea, #content, #hdr, #contentOverlay").addClass("hidden");		$("#menuBtn").click(function(){flex.showMenu()}).attr('title', 'Show menu');		setTimeout(this.checkWrapped, 500);	}		flex.checkWrapped = function() {		if (!this.checkingWrapStatus) {			this.checkingWrapStatus = true;			if (window.matchMedia('(max-width: 500px)').matches)				if ($('.wraphelper').length == 0)					$('<td>').addClass('wraphelper').insertAfter($('.col2').parent());			if (window.matchMedia('(min-width: 501px)').matches)				$('.wraphelper').remove();						// check if flex items have wrapped, required to set different width			var def = '.odd > td:nth-child(n+2), .even > td:nth-child(n+2), .makeSelect form > *';			$(def).each(function() {				$(this).removeClass('wrapped');				// check if top-offset is larger than parent -> wrapped				if (($(this)[0].offsetTop-$(this).parent()[0].offsetTop)>0) {					$(this).addClass('wrapped');				}							});			this.checkingWrapStatus = false;		}	}		flex.hasUrlParam = function(name) {		var regex = new RegExp('[\?&]' + name + '=([^&#]*)');		return window.location.href.match(regex) != undefined;	}		flex.makeSvgPlotsScalable = function() {		// set viewBox of SGV plots, required for scaling				// fix for case-sensitive attribute		$.attrHooks['viewbox'] = {			set: function(elem, value, name) {				elem.setAttributeNS(null, 'viewBox', value + '');				return value;}};		$('.SVGplot > svg').attr("viewBox", function() {			var viewbox = "0 0 "+$(this).css("width").replace('px','')+" "+$(this).css("height").replace('px','');			$(this).css('width','100%').css('height','unset');			return viewbox		});	}			flex.applyStyleData = function() {		if (this.styleData.scalePage>=1)			$('body').css('zoom', this.styleData.scalePage*100+'%')		//var deviceWidth = (window.innerWidth > 0) ? window.innerWidth : screen.width;		//$('meta[name="viewport"]').attr('content','width='+Math.round(deviceWidth/this.styleData.scalePage)+'px, initial-scale=1.0');		this.createCSS();		$(".odd table, .even table").parent().css('padding','0 0 2px 0');		$("head style#flex_css").remove();		style = "<style id='flex_css'>"+this.css+"</style>";		if($("head style#fhemweb_css").length)			$("head style#fhemweb_css").before(style);		else			$("head").append(style);		if (this.styleData.showReadingsGroupAsTable){			$('table.readingsGroup').css('display','table');			$('table.readingsGroup > tbody').css('display','table-row-group');			$('.readingsGroup .odd,.readingsGroup .even').css('display','table-row');			$('.readingsGroup .odd td,.readingsGroup .even td').css('white-space','nowrap').css('word-break','keep-all').css('display','table-cell');			$('.readingsGroup .odd td:nth-child(n+2),.readingsGroup .even td:nth-child(n+2)').css('text-align','unset');			$('.readingsGroup .odd td:nth-child(1),.readingsGroup .even td:nth-child(1)').css('width','350px');			$('table.readingsGroup').parent().css('overflow-x', 'auto').css('display','block').css('scrollbar-width','none').css('-webkit-overflow-scrolling','touch');			$('table.readingsGroup').parent().parent().css('display','table').css('table-layout','fixed').css('width','100%');		}		//separate multiple colorpicker_widgets within one cell		$('.colorpicker_widget').each(function() {			if ($(this).children('div').length > 1) {				$(this).children('br').remove();			}		});				//$('table.weather').parent().parent().css('overflow-x','scroll').css('scrollbar-width','none');		$('table.weather').parent().css('display','block').css('max-width','100%').css('min-width','unset');		$('.devType').parent().css('padding','0');		$('table table').parent().css('padding','0');		this.checkWrapped();	}		flex.changeSetting = function (desc,state) {		if (desc.startsWith('color.')) {			if (this.styleData.colorOptionsDetailed)				this.styleData.color[desc.replace('color.','')] = state;			else {				this.simpleStyleData[desc.replace('color.','')] = state;				this.setSimpleColor();			}		} else			this.styleData[desc] = state;				this.refreshIcons();		this.applyStyleData();		this.writeStyleData(true);	}		flex.setSimpleColor = function () {		this.styleData.color = {			HeaderBG:           this.simpleStyleData.Accent,			HeaderIcon:         this.simpleStyleData.HeaderText,			HeaderText:         this.simpleStyleData.HeaderText,			HeaderBorder:       this.simpleStyleData.Accent,			MenuBG:             this.simpleStyleData.MenuBackground,			MenuBorder:         this.simpleStyleData.Accent,			MenuIcon:           this.simpleStyleData.MenuText,			MenuRoomIcon:       this.simpleStyleData.MenuText,			MenuText:           this.simpleStyleData.MenuText,			MenuHoverLink:      this.simpleStyleData.Accent,			MainBG:             this.simpleStyleData.Background,			TableHeaderBG:      this.simpleStyleData.Accent,			TableHeaderText:    this.simpleStyleData.HeaderText,			TableBorder:        this.simpleStyleData.Accent,			TableOdd:           this.simpleStyleData.Background,			TableEven:          this.shiftColor(this.simpleStyleData.Background,'#222'),			TableText:          this.simpleStyleData.Text,			TableHoverRow:      this.shiftColor(this.simpleStyleData.Background,'#333'),			TableHoverLink:     this.simpleStyleData.Accent,			TableNewEvent:      '#F00',			TableIcon:          this.simpleStyleData.Accent,			SetGetAttrBG:       this.shiftColor(this.simpleStyleData.Background,'#333'),			SubmitButtonBG:     this.simpleStyleData.Accent,			SubmitButtonBorder: this.simpleStyleData.Accent,			SubmitButtonText:   this.simpleStyleData.HeaderText,			WidgetBorder:       this.simpleStyleData.Accent,			WidgetText:         this.simpleStyleData.Text,			WidgetHighlight:    this.simpleStyleData.Accent,			plotBG:             '#EEE',			plotBorder:         this.simpleStyleData.Accent,			plotText:           this.simpleStyleData.Text,			plotGrid:           '#555',			plotMarker:         '#F00',			plotLine0:          '#F00',			plotLine1:          '#0F0',			plotLine2:          '#00F',			plotLine3:          '#F0F',			plotLine4:          '#A52A2A',			plotLine5:          '#000',			plotLine6:          '#808000',			plotLine7:          '#808080',			plotLine8:          '#FF0',			plotLinePasted:     '#000' };	}		flex.createSettingsHTML = function() {		if ($('.fileList.styles').length) {			var rowCounter = 0;			var addRow = function () {				var parent = arguments[0];				var desc = arguments[1];				var row = $('<tr>').addClass((++rowCounter%2 ? "even":"odd")).appendTo(parent);				$('<td>').text(desc).appendTo(row);				for (i=2; i < arguments.length; i++)					arguments[i].appendTo(row).wrap('<td></td>');			}			var createColorPicker = function (parent,desc) {				addRow(parent,desc,$('<div>').attr('id',desc));				FW_replaceWidget('#'+desc, desc, ["colorpicker","RGB"], (flex.styleData.colorOptionsDetailed) ? flex.styleData.color[desc].replace('#','') : flex.simpleStyleData[desc].replace('#',''), undefined, "rgb",undefined,					function (value) { 						flex.changeSetting('color.'+desc,'#'+value);					});			}						// General			if (!$('#flexGeneral').length)				$('<div class="flexSettings fileList">Flex general</div><table id="flexGeneral" class="block wide fileList"><tbody></tbody></table><br>').insertBefore($('.fileList.styles'));			else				$('#flexGeneral > tbody').empty();			var tableGeneral = $('#flexGeneral > tbody');			// save/delete buttons			addRow(tableGeneral,'Save/delete settings',				$('<button>',{id: 'saveGlobal', style: "cursor: pointer;"})					.addClass('ui-button')					.click(function() {flex.writeStyleData(false);})					.text('Save global')					.appendTo($('.fileList.styles').parent()),				$('<button>',{id: 'deleteGlobal', style: "cursor: pointer;"})					.addClass('ui-button')					.click(function() {flex.deleteStyleData(false);})					.text('Delete global')					.appendTo($('.fileList.styles').parent()),				$('<button>',{id: 'deleteLocal', style: "cursor: pointer;"})					.addClass('ui-button')					.click(function() {flex.deleteStyleData(true);})					.text('Delete local')					.appendTo($('.fileList.styles').parent()));			addRow(tableGeneral,'Need help / found bug?',				$('<a>',{href: 'https://forum.fhem.de/index.php/topic,101749.0.html', target: '_blank'})					.text('flex thread'));						// Settings			if (!$('#flexSettings').length)				$('<div class="flexSettings fileList">Flex settings</div><table id="flexSettings" class="block wide fileList"><tbody></tbody></table><br>').insertBefore($('.fileList.styles'));			else				$('#flexSettings > tbody').empty();			var tableSettings = $('#flexSettings > tbody');			for (desc in flex.styleData) {				if (!desc.match(/^(color|show|hide|enable|scale)/)) {					addRow(tableSettings,desc,						$('<input>',{id: desc, type: "text", value: flex.styleData[desc]})							.keyup(function() {flex.changeSetting($(this).attr('id'),$(this).val());}));				}				if (desc.match(/^scale/) && navigator.userAgent.search("Firefox") <= -1) {					addRow(tableSettings,desc,						$('<input>',{id: desc, type: "number", step: "0.1", min: 1, max: 2, value: flex.styleData[desc]})							.keyup(function() {								$(this).val(Math.min(Math.max($(this).val(),1),2));								flex.changeSetting($(this).attr('id'),$(this).val());}));				}			}			for (desc in flex.styleData) {				if (desc.match(/^(show|hide|enable)/)) {					addRow(tableSettings,desc,						$('<input>',{id: desc, type: "checkbox", style: "cursor: pointer;"})							.prop('checked', flex.styleData[desc])							.change(function() {flex.changeSetting($(this).attr('id'),$(this).prop('checked')==true );}));				}			}						// Color Settings			if (!$('#flexColorSettings').length)				$('<div class="flexSettings fileList">Flex color settings</div><table id="flexColorSettings" class="block wide fileList"><tbody></tbody></table><br>').insertBefore($('.fileList.styles'));			else				$('#flexColorSettings > tbody').empty();			var tableColors = $('#flexColorSettings > tbody');						//default presets			var presets = $('<select>',{ id: 'flexStylePresets' }).change(function() {flex.applyStylePreset($(this).val())});			$('<option>').text('-- select style --').prop('disabled',true).prop('selected',true).appendTo(presets);			for (stylename in flex.defaultStyles) {				$('<option>', {value: stylename}).text(stylename).appendTo(presets);			}			//custom presets			for (stylename in flex.styleDataComplete.flex.colorPreset) {				$('<option>', {value: stylename}).text(stylename).appendTo(presets);			}			addRow(tableColors,'Presets',presets, 				$('<a>',{ id: 'savePreset', style: "cursor: pointer;", title: "save preset"})					.click(function() {flex.saveStylePreset("Enter style name");})					.html(this.svgicons.fhem_save), 				$('<a>',{ id: 'deletePreset', style: "cursor: pointer;", title: "delete preset"})					.click(function() {flex.deleteStylePreset();})					.html(this.svgicons.message_garbage));			addRow(tableColors,'Color options',				$('<a>',{ id: 'simpleColors', style: "cursor: pointer;"})					.click(function() {flex.changeSetting('colorOptionsDetailed',false);flex.createSettingsHTML();})					.text('simple'), 				$('<a>',{ id: 'detailedColors', style: "cursor: pointer;"})					.click(function() {flex.changeSetting('colorOptionsDetailed',true);flex.createSettingsHTML();})					.text('detailed'));						// color pickers			if (this.styleData.colorOptionsDetailed)				for (desc in flex.styleData.color)					createColorPicker(tableColors,desc);			else				for (desc in flex.simpleStyleData)					createColorPicker(tableColors,desc);		}	}		// General information	flex.fhemPath = $('head').attr('root');	flex.webName = $("body").attr("data-webName");	flex.fwcsrf = $('body').attr('fwcsrf');	flex.room  = $("div#content").attr("room");	flex.device = $('#ddtable td[informid]').attr('informid');	// read data	flex.loadSVGIcons();	flex.loadDefaultStyles();	flex.loadStyleData();	// modify DOM	flex.showMenuIcons();	flex.prepareCommandBar();	flex.refreshCmdPlaceholder();	flex.makeSvgPlotsScalable();	flex.createSettingsHTML();	// apply current style	flex.applyStyleData();		$('<div>',{id: 'contentOverlay'}).click(flex.hideMenu).appendTo($('body'));		// check if menu should be shown or hidden	if(window.matchMedia('(max-width: 800px)').matches || !flex.styleData.showMenuAlways) flex.hideMenu();	else flex.showMenu();	// listen for DOM changes	$('.makeSelect').on("DOMSubtreeModified",flex.checkWrapped);	// check wrapped delayed, because of delayed widgets. TODO: callback function or listener for each field	setTimeout(flex.checkWrapped, 200);	// window size changed? -> check wrapped	$(window).resize(flex.checkWrapped);		$('#menu a[target=_blank]').each(function() {		if ($(this).attr('href').match(/commandref/)) {			$(this).off("click");			$(this).attr('href','https://fhem.de/commandref_DE.html')		}	});		// show content if ready	$('body').css('display','block');	if (flex.hasUrlParam('pos'))		$('#content').scrollTop($('.SVGlabel[data-name=svgZoomControl]').offset().top-$('#content').offset().top-20);	// add transition effect	setTimeout(function(){$("#menuScrollArea, #content, #hdr, body.commandref #right").css('transition','0.5s');},500);}// Raw code input: taken from original f18 style, thanks Rudi :)function f18_textInput() {  var n = "FW_mainTextInput";  var aCM = typeof AddCodeMirror == 'function';  $("body").append(  '<div id="'+n+'">'+  '<textarea rows="20" cols="90" style="width:99%;'+(aCM?'opacity:0;':'')+'"/>'+  '</div>');  var ta = $("#"+n+" textarea");  if(aCM)    AddCodeMirror(ta, function(cm) {       cm.on("change", function(){ ta.val(cm.getValue()) } );    });  $("#"+n).dialog({    dialogClass:"no-close", modal:true, width:"auto", closeOnEscape:true, 	title:"Raw FHEM-code input",    maxWidth:$(window).width()*0.9, maxHeight:$(window).height()*0.9,    buttons: [    {text:"Execute",click:function(){ FW_execRawDef( ta.val()) }},    {text:"Close", click:function(){ $(this).remove(); }},    ],    close:function(){ $("#"+n).remove(); }  });}/*! js-cookie v2.2.0 | MIT */!function(e){var n=!1;if("function"==typeof define&&define.amd&&(define(e),n=!0),"object"==typeof exports&&(module.exports=e(),n=!0),!n){var o=window.Cookies,t=window.Cookies=e();t.noConflict=function(){return window.Cookies=o,t}}}(function(){function e(){for(var e=0,n={};e<arguments.length;e++){var o=arguments[e];for(var t in o)n[t]=o[t]}return n}function n(o){function t(n,r,i){var c;if("undefined"!=typeof document){if(arguments.length>1){if("number"==typeof(i=e({path:"/"},t.defaults,i)).expires){var a=new Date;a.setMilliseconds(a.getMilliseconds()+864e5*i.expires),i.expires=a}i.expires=i.expires?i.expires.toUTCString():"";try{c=JSON.stringify(r),/^[\{\[]/.test(c)&&(r=c)}catch(e){}r=o.write?o.write(r,n):encodeURIComponent(r+"").replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g,decodeURIComponent),n=(n=(n=encodeURIComponent(n+"")).replace(/%(23|24|26|2B|5E|60|7C)/g,decodeURIComponent)).replace(/[\(\)]/g,escape);var s="";for(var f in i)i[f]&&(s+="; "+f,!0!==i[f]&&(s+="="+i[f]));return document.cookie=n+"="+r+s}n||(c={});for(var p=document.cookie?document.cookie.split("; "):[],d=/(%[0-9A-Z]{2})+/g,u=0;u<p.length;u++){var l=p[u].split("="),C=l.slice(1).join("=");this.json||'"'!==C.charAt(0)||(C=C.slice(1,-1));try{var m=l[0].replace(d,decodeURIComponent);if(C=o.read?o.read(C,m):o(C,m)||C.replace(d,decodeURIComponent),this.json)try{C=JSON.parse(C)}catch(e){}if(n===m){c=C;break}n||(c[m]=C)}catch(e){}}return c}}return t.set=t,t.get=function(e){return t.call(t,e)},t.getJSON=function(){return t.apply({json:!0},[].slice.call(arguments))},t.defaults={},t.remove=function(n,o){t(n,"",e(o,{expires:-1}))},t.withConverter=n,t}return n(function(){})});